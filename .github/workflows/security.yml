name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily security scans at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  dependency-scan:
    name: 'Dependency Vulnerability Scan'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          pip install safety pip-audit
          
      - name: Run safety check
        run: |
          safety check --json --output safety-report.json || true
          
      - name: Run pip-audit
        run: |
          pip-audit --format=json --output=pip-audit-report.json || true
          
      - name: Upload security reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            safety-report.json
            pip-audit-report.json

  sast-scan:
    name: 'Static Application Security Testing'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          
      - name: Install bandit
        run: |
          python -m pip install --upgrade pip
          pip install bandit[toml]
          
      - name: Run bandit security linter
        run: |
          bandit -r src/ -f json -o bandit-report.json || true
          bandit -r src/ -f txt
          
      - name: Upload SAST report
        uses: actions/upload-artifact@v3
        with:
          name: sast-report
          path: bandit-report.json

  secrets-scan:
    name: 'Secrets Detection'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified --fail

  sbom-generation:
    name: 'Software Bill of Materials'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          pip install cyclonedx-bom
          
      - name: Generate SBOM
        run: |
          cyclonedx-py requirements -i requirements.txt -o sbom.json || true
          cyclonedx-py environment -o sbom-env.json || true
          
      - name: Upload SBOM
        uses: actions/upload-artifact@v3
        with:
          name: sbom
          path: |
            sbom*.json